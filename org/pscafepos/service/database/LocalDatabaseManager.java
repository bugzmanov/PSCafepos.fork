package org.pscafepos.service.database;

import org.pscafepos.configuration.Constants;
import org.pscafepos.backends.database.jdbc.JdbcUtils;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.logging.Logger;
import java.util.logging.Level;
import java.io.File;

/**
 * @author Bagmanov
 *         Date: 14.09.2009
 */
public class LocalDatabaseManager {
    private static final String[] sql = {
            "CREATE TABLE billing_fees (" +
                    "    student_id BIGINT NOT NULL, " +
                    "    assigned_date  timestamp NOT NULL default '0000-00-00 00:00:00', " +
                    "    due_date  timestamp NOT NULL default '0000-00-00 00:00:00', " +
                    "    comments varchar(255) , " +
                    "    id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY, " +
                    "    title varchar(255), " +
                    "    amount double, " +
                    "    school_id BIGINT, " +
                    "    syear int, " +
                    "    waived_fee_id int , " +
                    "    old_id int " +
                    ")",

            "CREATE TABLE %table_prefix%update_holder ( SQL_EXPR LONG VARCHAR  NOT NULL)",

            "CREATE TABLE %table_prefix%item_desc (" +
                    "item_id BIGINT NOT NULL," +
                    "item_icon varchar(100) default NULL," +
                    "ico blob," +
                    "PRIMARY KEY  (item_id)" +
                    ")",
            "CREATE TABLE %table_prefix%batch_items (" +
                    "  ib_id BIGINT NOT NULL," +
                    "  ib_batchid BIGINT NOT NULL default 0," +
                    "  ib_itemid BIGINT NOT NULL default 0," +
                    "  PRIMARY KEY  (ib_id)" +
                    ")\n",

            "CREATE TABLE %table_prefix%batch_master (" +
                    "  mb_id BIGINT NOT NULL ," +
                    "  mb_name varchar(100) NOT NULL default ''," +
                    "  mb_category varchar(100) NOT NULL default ''," +
                    "  mb_building varchar(45) NOT NULL default ''," +
                    "  mb_active char(1) NOT NULL default ''," +
                    "  PRIMARY KEY  (mb_id)" +
                    ")\n",

            "CREATE TABLE %table_prefix%cashierusers_ref (" +
                    "  cur_id BIGINT NOT NULL ," +
                    "  cur_username varchar(50) NOT NULL default ''," +
                    "  PRIMARY KEY  (cur_id)" +
                    ")\n",

            "CREATE TABLE %table_prefix%hotbar(" +
                    "  hb_id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY ," +
                    "  hb_itemid BIGINT NOT NULL default 0," +
                    "  hb_building char(2) NOT NULL default ''," +
                    "  hb_register varchar(100) NOT NULL default ''," +
                    "  hb_cashier varchar(100) NOT NULL default ''," +
                    "  hb_count int NOT NULL default 0," +
                    "  PRIMARY KEY  (hb_id)" +
                    ")\n",

            "CREATE TABLE %table_prefix%inventory (" +
                    "  inv_id BIGINT NOT NULL ," +
                    "  inv_menuid int NOT NULL default 0," +
                    "  PRIMARY KEY  (inv_id)" +
                    ")\n",

            "CREATE TABLE %table_prefix%item_barcodes (" +
                    "  ibID BIGINT NOT NULL ," +
                    "  ibBarcode varchar(250) NOT NULL," +
                    "  ibType char(1) NOT NULL," +
                    "  ibItemID BIGINT NOT NULL," +
                    "  ibAnon1 varchar(10) NOT NULL," +
                    "  ibAnon2 varchar(10) NOT NULL," +
                    "  PRIMARY KEY  (ibID)" +
                    ")\n",

            "CREATE TABLE %table_prefix%items (" +
                    "  item_id BIGINT NOT NULL ," +
                    "  item_name varchar(100) NOT NULL default ''," +
                    "  item_description varchar(500) NOT NULL," +
                    "  item_price double NOT NULL default 0," +
                    "  item_building varchar(2) NOT NULL default ''," +
                    "  item_category VARCHAR(200) NOT NULL," +
                    "  item_visible char(1) NOT NULL default ''," +
                    "  item_allowfree char(1) NOT NULL default ''," +
                    "  item_allowreduced char(1) NOT NULL default ''," +
                    "  item_istypea char(1) NOT NULL default ''," +
                    "  item_reducedprice double NOT NULL default 0," +
                    "  item_addby varchar(100) NOT NULL default ''," +
                    "  item_adddate timestamp NOT NULL default '0000-00-00 00:00:00'," +
                    "  item_fr_bl int default NULL," +
                    "  PRIMARY KEY  (item_id)" +
                    ")\n",

            "CREATE TABLE %table_prefix%pos_autoadditems (" +
                    "  paa_id BIGINT NOT NULL ," +
                    "  paa_posid BIGINT NOT NULL default 0," +
                    "  paa_itemid BIGINT NOT NULL default 0," +
                    "  PRIMARY KEY  (paa_id)" +
                    ")",

            "CREATE TABLE %table_prefix%pos_messages (" +
                    "  m_id BIGINT NOT NULL ," +
                    "  m_posid BIGINT NOT NULL default 0," +
                    "  m_text LONG VARCHAR  NOT NULL," +
                    "  m_senttime timestamp NOT NULL default '0000-00-00 00:00:00'," +
                    "  m_creator varchar(100) NOT NULL default ''," +
                    "  m_viewed char(1) NOT NULL default ''," +
                    "  PRIMARY KEY  (m_id)" +
                    ")",
            "CREATE TABLE %table_prefix%pos_registration (" +
                    "  pr_id BIGINT NOT NULL ," +
                    "  pr_hostname varchar(254) NOT NULL default ''," +
                    "  pr_ipaddress varchar(100) NOT NULL default ''," +
                    "  pr_lastupdate timestamp NOT NULL default '0000-00-00 00:00:00'," +
                    "  pr_createdate timestamp NOT NULL default '0000-00-00 00:00:00'," +
                    "  pr_enabled char(1) NOT NULL default ''," +
                    "  pr_version varchar(50) NOT NULL default ''," +
                    "  pr_os varchar(150) NOT NULL default ''," +
                    "  pr_building varchar(100) NOT NULL default ''," +
                    "  pr_lastuser varchar(100) NOT NULL default ''," +
                    "  pr_anon3 varchar(100) NOT NULL default ''," +
                    "  PRIMARY KEY  (pr_id)" +
                    ")\n",
            "CREATE TABLE %table_prefix%pos_settings (" +
                    "  set_id BIGINT NOT NULL ," +
                    "  set_key varchar(100) NOT NULL default ''," +
                    "  set_value long varchar NOT NULL ," +
                    "  set_posid varchar(250) NOT NULL default ''," +
                    "  set_createdate timestamp NOT NULL default '0000-00-00 00:00:00'," +
                    "  set_anon1 varchar(20) NOT NULL default ''," +
                    "  set_anon2 varchar(20) NOT NULL default ''," +
                    "  PRIMARY KEY  (set_id)" +
                    ")\n",
            "CREATE TABLE sis_students (" +
                    "  student_id varchar(45) NOT NULL default ''," +
                    "  reduced varchar(10) NOT NULL default ''," +
                    "  free varchar(10) NOT NULL default ''," +
                    "  active varchar(10) NOT NULL default ''," +
                    "  first_name varchar(45) NOT NULL default ''," +
                    "  last_name varchar(45) NOT NULL default ''," +
                    "  PRIMARY KEY  (student_id)" +
                    ")\n",
            "CREATE TABLE users (" +
                    "  staff_id BIGINT NOT NULL," +
                    "  first_name varchar(45) NOT NULL default ''," +
                    "  last_name varchar(45) default ''," +
                    "  PRIMARY KEY  (staff_id)" +
                    ")\n",
            "CREATE TABLE %table_prefix%studentcredit (" +
                    "  credit_id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY," +
                    "  credit_studentid varchar(45) NOT NULL default ''," +
                    "  credit_amount double NOT NULL default 0," +
                    "  credit_createdby varchar(100) NOT NULL default ''," +
                    "  credit_createdatetime timestamp NOT NULL default '0000-00-00 00:00:00'," +
                    "  credit_lastused timestamp NOT NULL default '0000-00-00 00:00:00'," +
                    "  credit_active char(1) NOT NULL default ''," +
                    "  PRIMARY KEY  (credit_id)" +
                    ")\n",
            "CREATE TABLE %table_prefix%studentcredit_log (" +
                    "  scl_id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY," +
                    "  scl_studentid varchar(45) NOT NULL default ''," +
                    "  scl_action double NOT NULL default 0," +
                    "  scl_transid BIGINT NOT NULL default 0," +
                    "  scl_datetime timestamp NOT NULL default '0000-00-00 00:00:00'," +
                    "  PRIMARY KEY  (scl_id)" +
                    ")\n",
            "CREATE TABLE %table_prefix%trans_item (" +
                    "  ti_id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH " + Long.MAX_VALUE / 2 + ", INCREMENT BY 1)," +
                    "  ti_itemid BIGINT NOT NULL default 0," +
                    "  ti_tmid BIGINT NOT NULL default 0," +
                    "  ti_pricesold double NOT NULL default 0," +
                    "  ti_registerid varchar(100) NOT NULL default ''," +
                    "  ti_cashier varchar(100) NOT NULL default ''," +
                    "  ti_studentid varchar(45) NOT NULL default ''," +
                    "  ti_isfree char(1) NOT NULL default ''," +
                    "  ti_isreduced char(1) NOT NULL default ''," +
                    "  ti_datetime timestamp NOT NULL default '0000-00-00 00:00:00'," +
                    "  ti_istypea varchar(45) NOT NULL default ''," +
                    "  ti_anon2 varchar(45) NOT NULL default ''," +
                    "  ti_anon3 varchar(45) NOT NULL default ''," +
                    "  ti_anon4 varchar(45) NOT NULL default ''," +
                    "  ti_anon5 varchar(45) NOT NULL default ''," +
                    "  PRIMARY KEY  (ti_id)" +
                    ")\n",
            "CREATE TABLE %table_prefix%trans_master (" +
                    "  tm_id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH " + Long.MAX_VALUE / 2 + ", INCREMENT BY 1)," +
                    "  tm_studentid varchar(45) NOT NULL default ''," +
                    "  tm_total double NOT NULL default 0," +
                    "  tm_cashtotal double NOT NULL default 0," +
                    "  tm_credittotal double NOT NULL default 0," +
                    "  tm_building varchar(45) NOT NULL default ''," +
                    "  tm_register varchar(100) NOT NULL default ''," +
                    "  tm_cashier varchar(100) NOT NULL default ''," +
                    "  tm_datetime timestamp NOT NULL default '0000-00-00 00:00:00'," +
                    "  tm_change double NOT NULL default 0," +
                    "  tm_buyer_type varchar(45) NOT NULL default ''," +
                    "  tm_anon2 varchar(45) NOT NULL default ''," +
                    "  tm_anon3 varchar(45) NOT NULL default ''," +
                    "  tm_anon4 varchar(45) NOT NULL default ''," +
                    "  tm_anon5 varchar(45) NOT NULL default ''," +
                    "  PRIMARY KEY  (tm_id)" +
                    ")\n"};

    private static final Logger logger = Logger.getLogger(LocalDatabaseManager.class.getName());

    public static boolean create(String tablePrefix) {
        Connection connection = null;
        try {
            Class.forName(Constants.LOCALDB_JDBC_DRIVER);
            connection = DriverManager.getConnection(Constants.LOCALDB_CONNECTION_STRING);
            Statement statement = connection.createStatement();
            for (String s : sql) {
                statement.executeUpdate(s.replace("%table_prefix%", tablePrefix));
            }
            return true;
        } catch (Exception e) {
            logger.log(Level.SEVERE, e.getMessage(), e);
            return false;
        } finally {
            JdbcUtils.closeIfNeededSilently(connection);
        }
    }

    public static void dump() {
        deleteDir(new File(Constants.LOCALDB_name));
    }

    private static boolean deleteDir(File dir) {
        if (dir.isDirectory()) {
            String[] children = dir.list();
            for (String aChildren : children) {
                boolean success = deleteDir(new File(dir, aChildren));
                if (!success) {
                    return false;
                }
            }
        }

        // The directory is now empty so delete it
        return dir.delete();
    }


}
